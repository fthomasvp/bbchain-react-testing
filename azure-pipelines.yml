trigger:
  - main

pool:
  vmImage: ubuntu-latest

variables:
  npm_config_cache: $(Pipeline.Workspace)/.npm

steps:
  - task: NodeTool@0
    displayName: Install Node >=16.x
    inputs:
      versionSpec: "16.x"

  - script: npm audit --production --audit-level=critical
    displayName: Audit (Production dependencies)

  - task: Cache@2
    inputs:
      key: 'npm | "$(Agent.OS)" | package-lock.json'
      restoreKeys: |
          npm | "$(Agent.OS)"
      path: $(npm_config_cache)
    displayName: Cache npm

  - script: npm ci
    displayName: Install Dependencies

  - script: npm run coverage
    displayName: Generate Coverage Report

  - task: PublishCodeCoverageResults@1
    displayName: Publish Coverage Report
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: "$(System.DefaultWorkingDirectory)/coverage/cobertura-coverage.xml"

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: "JUnit"
      testResultsFiles: "**/TEST-*.xml"

  - script: npm run test
    displayName: Run Unit Tests

  - script: npm run build
    displayName: Build App

  - task: PublishPipelineArtifact@1
    displayName: Publish App to Artifacts
    inputs:
      targetPath: dist
      artifact: Build
